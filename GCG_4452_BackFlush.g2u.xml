<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <BorderStyle>None</BorderStyle>
  <Pages>
    <DefaultPage>
      <Header>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Header>
      <Footer>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Footer>
      <PageSize>
        <Width>0</Width>
        <Height>0</Height>
      </PageSize>
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>489</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>2</Height>
      </Size>
      <X>0</X>
      <Y>489</Y>
      <Width>24</Width>
      <Height>2</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <LineNumbersForeColor>WindowText</LineNumbersForeColor>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Footer>
    <Header>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Header>
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>489</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>Gui.Form..Create</string>
        <string>Gui.Form..Caption("Op Codes To Backflush")</string>
        <string>Gui.Form..Size(5865,7350)</string>
        <string>Gui.Form..MinX(0)</string>
        <string>Gui.Form..MinY(0)</string>
        <string>Gui.Form..Position(0,0)</string>
        <string>Gui.Form..BackColor(-2147483633)</string>
        <string>Gui.Form..MousePointer(0)</string>
        <string>Gui.Form..Event(UnLoad,Form_UnLoad)</string>
        <string>Gui.Form.GsGridControl1.Create(GsGridControl)</string>
        <string>Gui.Form.GsGridControl1.Size(2145,6210)</string>
        <string>Gui.Form.GsGridControl1.Position(285,570)</string>
        <string>Gui.Form.GsGridControl2.Create(GsGridControl)</string>
        <string>Gui.Form.GsGridControl2.Size(2145,6210)</string>
        <string>Gui.Form.GsGridControl2.Position(3420,570)</string>
        <string>Gui.Form.lbl1.Create(Label,"Op Codes To Not Backflush",True,2445,255,0,285,330,True,0,"Arial",8,-2147483633,0)</string>
        <string>Gui.Form.lbl2.Create(Label,"Op Codes To Backflush",True,2445,255,0,3420,330,True,0,"Arial",8,-2147483633,0)</string>
        <string>Gui.Form.cmdMove1.Create(Button)</string>
        <string>Gui.Form.cmdMove1.Size(690,375)</string>
        <string>Gui.Form.cmdMove1.Position(2580,2670)</string>
        <string>Gui.Form.cmdMove1.Caption("&gt;")</string>
        <string>Gui.Form.cmdMove1.Event(Click,cmdMove_Click)</string>
        <string>Gui.Form.cmdMoveAll.Create(Button)</string>
        <string>Gui.Form.cmdMoveAll.Size(690,375)</string>
        <string>Gui.Form.cmdMoveAll.Position(2580,3060)</string>
        <string>Gui.Form.cmdMoveAll.Caption("&gt;&gt;&gt;")</string>
        <string>Gui.Form.cmdMoveAll.Event(Click,cmdMove_Click)</string>
        <string>Gui.Form.cmdRemoveAll.Create(Button)</string>
        <string>Gui.Form.cmdRemoveAll.Size(690,375)</string>
        <string>Gui.Form.cmdRemoveAll.Position(2580,3450)</string>
        <string>Gui.Form.cmdRemoveAll.Caption("&lt;&lt;&lt;")</string>
        <string>Gui.Form.cmdRemoveAll.Event(Click,cmdRemove_Click)</string>
        <string>Gui.Form.cmdRemove1.Create(Button)</string>
        <string>Gui.Form.cmdRemove1.Size(690,375)</string>
        <string>Gui.Form.cmdRemove1.Position(2580,3840)</string>
        <string>Gui.Form.cmdRemove1.Caption("&lt;")</string>
        <string>Gui.Form.cmdRemove1.Event(Click,cmdRemove_Click)</string>
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.sSource.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)</string>
        <string />
        <string>F.Intrinsic.Control.SelectCase(V.Caller.Hook)</string>
        <string>	'inv populate hook</string>
        <string>	F.Intrinsic.Control.Case(10120)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PL",240)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PT",112)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PW",105)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-CHK-1","PL",220)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-CHK-1","PT",112)</string>
        <string>		F.Intrinsic.Variable.SetProperty("GAB-CHK-1","PW",15)</string>
        <string>		V.Passed.GAB-LBL-1.Set("Back Flush")</string>
        <string>		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"LOCK",1)</string>
        <string>		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-CHK-1,"LOCK",1)</string>
        <string />
        <string>	'inv part change hook</string>
        <string>	F.Intrinsic.Control.Case(10125)</string>
        <string>		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"LOCK",0)</string>
        <string>		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-CHK-1,"LOCK",0)</string>
        <string>		F.Intrinsic.Control.SelectCase(V.Passed.000060.UCase)</string>
        <string>			F.Intrinsic.Control.Case("PURCH TO STOCK")</string>
        <string>				V.Local.sSource.Set("P")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("PURCH TO JOB")</string>
        <string>				V.Local.sSource.Set("J")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("MANUF TO STOCK")</string>
        <string>				V.Local.sSource.Set("M")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("MANUF TO JOB")</string>
        <string>				V.Local.sSource.Set("F")</string>
        <string>				</string>
        <string>			F.Intrinsic.Control.Case("CONSIGN TO STOCK")</string>
        <string>				V.Local.sSource.Set("C")</string>
        <string>				</string>
        <string>			F.Intrinsic.Control.Case("CONSIGN TO JOB")</string>
        <string>				V.Local.sSource.Set("G")</string>
        <string>			</string>
        <string>		F.Intrinsic.Control.EndSelect</string>
        <string>		</string>
        <string>		F.Intrinsic.String.Build("Select Part, Rev, Location, PL, Code_Sort, Code_Source, Backflush From GCG_4452_Prt_BFlush Where Part = '{0}' and Rev = '{1}' and Location = '{2}' and PL = '{3}' and Code_Sort = '{4}' and Code_Source = '{5}'",V.Passed.000007.Trim,V.Passed.000008.Trim,V.Passed.000009.Trim,V.Passed.000011.Trim,V.Passed.000025.Trim,V.Local.sSource,V.Local.sSql)</string>
        <string>		F.Data.DataTable.CreateFromSQL("Part","con",V.Local.sSql,True)</string>
        <string />
        <string>		F.Intrinsic.Control.If(V.DataTable.Part.RowCount--,&lt;&gt;,-1)</string>
        <string>			V.Passed.GAB-CHK-1.Set("Y")</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			V.Passed.GAB-CHK-1.Set("N")</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'inv post save hook	</string>
        <string>	F.Intrinsic.Control.Case(10185)</string>
        <string>		'saving part rev location and backflush to custom table </string>
        <string>		F.Intrinsic.String.Build("Select Part, Rev, Location, PL, Code_Sort, Code_Source, Backflush From GCG_4452_Prt_BFlush Where Part = '{0}' and Rev = '{1}' and Location = '{2}'",V.Passed.000007.Trim,V.Passed.000008.Trim,V.Passed.000009.Trim,V.Local.sSql)</string>
        <string>		F.Data.DataTable.CreateFromSQL("Part","con",V.Local.sSql,True)</string>
        <string>		</string>
        <string>		F.Intrinsic.Control.SelectCase(V.Passed.000060.UCase)</string>
        <string>			F.Intrinsic.Control.Case("PURCH TO STOCK")</string>
        <string>				V.Local.sSource.Set("P")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("PURCH TO JOB")</string>
        <string>				V.Local.sSource.Set("J")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("MANUF TO STOCK")</string>
        <string>				V.Local.sSource.Set("M")</string>
        <string>			</string>
        <string>			F.Intrinsic.Control.Case("MANUF TO JOB")</string>
        <string>				V.Local.sSource.Set("F")</string>
        <string>				</string>
        <string>			F.Intrinsic.Control.Case("CONSIGN TO STOCK")</string>
        <string>				V.Local.sSource.Set("C")</string>
        <string>				</string>
        <string>			F.Intrinsic.Control.Case("CONSIGN TO JOB")</string>
        <string>				V.Local.sSource.Set("G")</string>
        <string>			</string>
        <string>		F.Intrinsic.Control.EndSelect</string>
        <string>		</string>
        <string>		F.Intrinsic.Control.If(V.Passed.GAB-CHK-1,=,"Y")</string>
        <string>			F.Intrinsic.Control.If(V.DataTable.Part.RowCount--,=,-1)</string>
        <string>				F.Data.DataTable.AddRow("Part","Part",V.Passed.000007.Trim,"Rev",V.Passed.000008.Trim,"Location",V.Passed.000009.Trim,"PL",V.Passed.000011.Trim,"Code_Sort",v.Passed.000025.Trim,"Code_Source",V.Local.sSource,"BackFlush",True)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Data.DataTable.SetValue("Part",0,"Part",V.Passed.000007.Trim,"Rev",V.Passed.000008.Trim,"Location",V.Passed.000009.Trim,"PL",V.Passed.000011.Trim,"Code_Sort",v.Passed.000025.Trim,"Code_Source",V.Local.sSource,"BackFlush",True)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			F.Intrinsic.Control.If(V.DataTable.Part.RowCount--,=,-1)</string>
        <string>				F.Data.DataTable.AddRow("Part","Part",V.Passed.000007.Trim,"Rev",V.Passed.000008.Trim,"Location",V.Passed.000009.Trim,"PL",V.Passed.000011.Trim,"Code_Sort",v.Passed.000025.Trim,"Code_Source",V.Local.sSource,"BackFlush",False)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Data.DataTable.SetValue("Part",0,"Part",V.Passed.000007.Trim,"Rev",V.Passed.000008.Trim,"Location",V.Passed.000009.Trim,"PL",V.Passed.000011.Trim,"Code_Sort",v.Passed.000025.Trim,"Code_Source",V.Local.sSource,"BackFlush",False)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>		F.Data.DataTable.SaveToDB("Part","con","GCG_4452_Prt_BFlush","Part*!*Rev*!*Location")</string>
        <string />
        <string>		'unchecking chk box</string>
        <string>		V.Passed.GAB-CHK-1.Set("N")</string>
        <string />
        <string>	'Gui OLS003  Pre-Process Hook for single and multiple jobs</string>
        <string>	F.Intrinsic.Control.Case(15881)</string>
        <string>		'getting data from custom table for saving</string>
        <string>		F.Intrinsic.String.Build("Select Backflush From GCG_4452_Op_Codes Where Operation = '{0}' and BackFlush = 1",V.Passed.009001.Trim,V.Local.sSql)</string>
        <string>		F.Data.DataTable.CreateFromSQL("Op_Code","con",V.Local.sSql,True)</string>
        <string>		F.Intrinsic.Control.If(V.DataTable.Op_Code.RowCount--,&lt;&gt;,-1)</string>
        <string>			F.Intrinsic.Control.CallSub(backflush,"Job",V.passed.009990,"Suffix",V.Passed.009991,"Seq",V.Passed.009992)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'when ran from menu	</string>
        <string>	F.Intrinsic.Control.CaseElse</string>
        <string>		F.Intrinsic.Control.CallSub(populategrids)</string>
        <string>		Gui.Form..Show</string>
        <string />
        <string>F.Intrinsic.Control.EndSelect</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.Form_UnLoad.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.Part.Exists,=,True)</string>
        <string>	F.Data.DataTable.Close("Part")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.Back.Exists,=,True)</string>
        <string>	F.Data.DataTable.Close("Back")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.NoBack.Exists,=,True)</string>
        <string>	F.Data.DataTable.Close("NoBack")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.Op_Code.Exists,=,True)</string>
        <string>	F.Data.DataTable.Close("Op_Code")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataView.Op_Code!Op_Code.Exists,=,True)</string>
        <string>	F.Data.DataView.Close("Op_Code","Op_Code")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.ODBC.Connection!con.Close</string>
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Form_UnLoad.End</string>
        <string />
        <string>Program.Sub.cmdMove_Click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdMove_Click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sValue.Declare(String)</string>
        <string>V.Local.sFilter.Declare(String)</string>
        <string>V.Local.iIndex.Declare(Long)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string />
        <string>F.Intrinsic.Control.SelectCase(V.Args.ControlName)</string>
        <string>	F.Intrinsic.Control.Case("CMDMOVE1")</string>
        <string>		'moving selected row(s) to grid 2</string>
        <string>		Gui.Form.GsGridControl1.GetSelectedRows("NoBack",V.Local.sRet)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>		V.Local.i.Set(V.Local.sRet.UBound)</string>
        <string>		F.Intrinsic.Control.For(V.Local.i,V.Local.sRet.UBound,0,-1)</string>
        <string>			F.Intrinsic.String.Build("Operation = '{0}'",V.DataTable.NoBack(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,V.Local.sFilter)</string>
        <string>			F.Data.DataView.Create("Op_Code","Op_Code",22,V.Local.sFilter,"Operation")</string>
        <string>			F.Intrinsic.Control.If(V.DataView.Op_Code!Op_Code.RowCount--,=,-1)</string>
        <string>				F.Data.DataTable.AddRow("Back","Operation",V.DataTable.NoBack(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",True)</string>
        <string>				F.Data.DataTable.AddRow("Op_Code","Operation",V.DataTable.NoBack(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",True)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Data.DataTable.AddRow("Back","Operation",V.DataTable.NoBack(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",True)</string>
        <string>				F.Data.DataView.SetValue("Op_Code","Op_Code",0,"Operation",V.DataTable.NoBack(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",True)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			F.Data.DataTable.DeleteRow("NoBack",V.Local.sRet(V.Local.i).Long)</string>
        <string>			F.Data.DataView.Close("Op_Code","Op_Code")</string>
        <string>		F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>	F.Intrinsic.Control.Case("CMDMOVEALL")</string>
        <string>		'moving all rows to grid 2</string>
        <string>		F.Data.DataTable.SetValue("NoBack",-1,"BackFlush",True)</string>
        <string>		F.Data.DataTable.Merge("NoBack","Back",False,2)</string>
        <string>		F.Data.DataTable.Merge("Back","Op_Code",False,2)</string>
        <string />
        <string>		F.Data.DataTable.DeleteRow("NoBack")</string>
        <string />
        <string>F.Intrinsic.Control.EndSelect</string>
        <string />
        <string>F.Data.DataTable.SaveToDB("Op_Code","con","GCG_4452_Op_Codes","Operation",256,"Operation@!@Operation*!*Backflush@!@Backflush")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdMove_Click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdMove_Click.End</string>
        <string />
        <string>Program.Sub.cmdRemove_Click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdRemove_Click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sValue.Declare(String)</string>
        <string>V.Local.sFilter.Declare(String)</string>
        <string>V.Local.iIndex.Declare(Long)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string />
        <string>F.Intrinsic.Control.SelectCase(V.Args.ControlName)</string>
        <string>	F.Intrinsic.Control.Case("CMDREMOVE1")</string>
        <string>		'moving selected row(s) to grid 1</string>
        <string>		Gui.Form.GsGridControl2.GetSelectedRows("Back",V.Local.sRet)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>		V.Local.i.Set(V.Local.sRet.UBound)</string>
        <string>		F.Intrinsic.Control.For(V.Local.i,V.Local.sRet.UBound,0,-1)</string>
        <string>			F.Intrinsic.String.Build("Operation = '{0}'",V.DataTable.Back(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,V.Local.sFilter)</string>
        <string>			F.Data.DataView.Create("Op_Code","Op_Code",22,V.Local.sFilter,"Operation")</string>
        <string>			F.Intrinsic.Control.If(V.DataView.Op_Code!Op_Code.RowCount--,=,-1)</string>
        <string>				F.Data.DataTable.AddRow("NoBack","Operation",V.DataTable.Back(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",False)</string>
        <string>				F.Data.DataTable.AddRow("Op_Code","Operation",V.DataTable.Back(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",False)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Data.DataTable.AddRow("NoBack","Operation",V.DataTable.Back(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",False)</string>
        <string>				F.Data.DataView.SetValue("Op_Code","Op_Code",0,"Operation",V.DataTable.Back(V.Local.sRet(V.Local.i).Long).Operation!FieldValTrim,"BackFlush",False)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			F.Data.DataTable.DeleteRow("Back",V.Local.sRet(V.Local.i).Long)</string>
        <string>			F.Data.DataView.Close("Op_Code","Op_Code")</string>
        <string>		F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>	F.Intrinsic.Control.Case("CMDREMOVEALL")</string>
        <string>		'moving all rows to grid 1</string>
        <string>		F.Data.DataTable.SetValue("Back",-1,"BackFlush",False)</string>
        <string>		F.Data.DataTable.Merge("Back","NoBack",False,2)</string>
        <string>		F.Data.DataTable.Merge("NoBack","Op_Code",False,2)</string>
        <string />
        <string>		F.Data.DataTable.DeleteRow("Back")</string>
        <string />
        <string>F.Intrinsic.Control.EndSelect</string>
        <string />
        <string>F.Data.DataTable.SaveToDB("Op_Code","con","GCG_4452_Op_Codes","Operation",256,"Operation@!@Operation*!*Backflush@!@Backflush")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdRemove_Click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdRemove_Click.End</string>
        <string />
        <string>Program.Sub.Populategrids.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Populategrids_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>'getting data from custom table for saving</string>
        <string>V.Local.sSql.Set("Select rtrim(Operation) as Operation, Backflush From GCG_4452_Op_Codes")</string>
        <string>F.Data.DataTable.CreateFromSQL("Op_Code","con",V.Local.sSql,True)</string>
        <string>F.Data.DataTable.SetPK("Op_Code","Operation")</string>
        <string />
        <string>'getting data from custom table and op code table where backflush is not set to true</string>
        <string>V.Local.sSql.Set("Select distinct rtrim(a.Operation) as Operation, Cast(isnull(backflush,0) as bit) as Backflush From V_Op_Codes a Left Join GCG_4452_Op_Codes b on a.Operation = b.Operation Where (BackFlush = 0 or BackFlush is null) and LMO = 'L' and Operation &lt;&gt; ' '")</string>
        <string>F.Data.DataTable.CreateFromSQL("NoBack","con",V.Local.sSql,True)</string>
        <string>F.Data.DataTable.SetPK("NoBack","Operation")</string>
        <string />
        <string>'getting data from custom table where op_code back flush is true</string>
        <string>V.Local.sSql.Set("Select rtrim(Operation) as Operation, Backflush From GCG_4452_Op_Codes Where BackFlush = 1")</string>
        <string>F.Data.DataTable.CreateFromSQL("Back","con",V.Local.sSql,True)</string>
        <string>F.Data.DataTable.SetPK("Back","Operation")</string>
        <string />
        <string>F.Intrinsic.Control.CallSub(setgridproperties)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Populategrids_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Populategrids.End</string>
        <string />
        <string>Program.Sub.SetGridProperties.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("SetGridProperties_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'setting properties for the no backflush grid</string>
        <string>Gui.Form.GsGridControl1.AddGridviewFromDatatable("NoBack","NoBack")</string>
        <string>Gui.Form.GsGridControl1.SetGridviewProperty("NoBack","readonly","True")</string>
        <string>Gui.Form.GsGridControl1.SetGridviewProperty("NoBack","multiselect","True")</string>
        <string>Gui.Form.GsGridControl1.SetGridviewProperty("NoBack","MultiSelectMode","0")</string>
        <string>Gui.Form.GsGridControl1.SetGridviewProperty("NoBack","Editable","False")</string>
        <string>Gui.Form.GsGridControl1.SetColumnProperty("NoBack","BackFlush","Visible","False")</string>
        <string>Gui.Form.GsGridControl1.SetColumnProperty("NoBack","Operation","HeaderBackColor","#d3d3d3")</string>
        <string />
        <string />
        <string>'setting properites for the backflush grid</string>
        <string>Gui.Form.GsGridControl2.AddGridviewFromDatatable("Back","Back")</string>
        <string>Gui.Form.GsGridControl2.SetGridviewProperty("Back","readonly","True")</string>
        <string>Gui.Form.GsGridControl2.SetGridviewProperty("Back","multiselect","True")</string>
        <string>Gui.Form.GsGridControl2.SetGridviewProperty("Back","MultiSelectMode","0")</string>
        <string>Gui.Form.GsGridControl2.SetGridviewProperty("Back","Editable","False")</string>
        <string>Gui.Form.GsGridControl2.SetColumnProperty("Back","BackFlush","Visible","False")</string>
        <string>Gui.Form.GsGridControl2.SetColumnProperty("Back","Operation","HeaderBackColor","#d3d3d3")</string>
        <string />
        <string>Gui.Form.GsGridControl1.MainView("NoBack")</string>
        <string>Gui.Form.GsGridControl2.MainView("Back")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("SetGridProperties_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.SetGridProperties.End</string>
        <string />
        <string>Program.Sub.BackFlush.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("BackFlush_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.sSeq.Declare(String)</string>
        <string>V.Local.sLine.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string>V.Local.sDate.Declare(String)</string>
        <string>V.Local.sPart.Declare(String)</string>
        <string>V.Local.sRev.Declare(String)</string>
        <string />
        <string>F.Intrinsic.String.Build("SELECT TOP 1 SEQ FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'L'  and SEQ &lt; '{2}' ORDER BY SEQ Desc ",V.Args.Job,V.Args.Suffix,V.Args.Seq,V.Local.sSql)</string>
        <string>F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstSeq",V.Local.sSQL)</string>
        <string>F.Intrinsic.Control.If(V.ODBC.Con!rstSEQ.EOF,=,False)</string>
        <string>	V.Local.sSeq.Set(V.ODBC.Con!rstSEQ.FieldValTrim!SEQ)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.ODBC.con!rstSeq.Close</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.sSeq.Length,&gt;,0)</string>
        <string>	F.Intrinsic.String.Build("SELECT Job, Suffix, Seq, Part, Locn, Hours_Estimated, Date_Completed, Flag_Closed FROM JOB_OPERATIONS WHERE LMO = 'M' AND JOB = '{0}' AND SUFFIX = '{1}' AND Flag_Closed &lt;&gt; 'Y' and SEQ Between '{2}' and '{3}' ORDER BY SEQ Desc ",V.Args.Job,V.Args.Suffix,V.Local.sSeq,V.Args.Seq,V.Local.sSql)</string>
        <string>	F.ODBC.Connection!con.OpenLocalRecordsetRW("rstSeq",V.Local.sSql)</string>
        <string>	F.Intrinsic.Control.DoUntil(V.ODBC.Con!rstSEQ.EOF,=,True)</string>
        <string>		V.Local.sPart.Set(V.ODBC.con!rstSeq.FieldValTrim!Part)</string>
        <string>		F.Intrinsic.String.RPad(V.Local.sPart," ",20,V.Local.sPart)</string>
        <string>		F.Intrinsic.String.Right(V.Local.sPart,3,V.Local.sRev)</string>
        <string>		F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)</string>
        <string>		F.Intrinsic.String.Build("Select BackFlush From GCG_4452_Prt_BFlush Where Part = '{0}' and Rev = '{1}' and Location = '{2}' and BackFlush = 1",V.Local.sPart.Trim,V.Local.sRev.Trim,V.ODBC.con!rstSeq.FieldValTrim!Locn,V.Local.sSql)</string>
        <string>		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstPrt",V.Local.sSql)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.Con!rstPrt.EOF,=,False)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sLine.Length,=,0)</string>
        <string>				F.Intrinsic.String.Build("{0},{8},,{1},{2},{3},,{4},{5},{6},{7}",V.Local.sPart,V.ODBC.con!rstSeq.FieldValFloat!Hours_Estimated," "," "," ",V.Args.Job,V.Args.Suffix,V.ODBC.con!rstSeq.FieldValTrim!Seq,V.Local.sRev,V.Local.sLine)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Intrinsic.String.Build("{0}{9}{1},{10},,{2},{3},{4},,{5},{6},{7},{8}",V.Local.sLine,V.Local.sPart,V.ODBC.con!rstSeq.FieldValFloat!Hours_Estimated," "," "," ",V.Args.Job,V.Args.Suffix,V.ODBC.con!rstSeq.FieldValTrim!Seq,V.Ambient.NewLine,V.Local.sRev,V.Local.sLine)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.con!rstPrt.Close</string>
        <string>		F.ODBC.con!rstSeq.MoveNext</string>
        <string>	F.Intrinsic.Control.Loop</string>
        <string>	F.ODBC.con!rstSeq.Close</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	F.Intrinsic.String.Build("SELECT Job, Suffix, Seq, Part, Hours_Estimated, Date_Completed, Flag_Closed FROM JOB_OPERATIONS WHERE LMO = 'M' AND JOB = '{0}' AND SUFFIX = '{1}' AND Flag_Closed &lt;&gt; 'Y' AND SEQ Between '000001' and '{3}' ORDER BY SEQ Desc ",V.Args.Job,V.Args.Suffix,V.Local.sSeq,V.Args.Seq,V.Local.sSql)</string>
        <string>	F.ODBC.Connection!con.OpenLocalRecordsetRW("rstSeq",V.Local.sSql)</string>
        <string>	F.Intrinsic.Control.DoUntil(V.ODBC.Con!rstSEQ.EOF,=,True)</string>
        <string>		V.Local.sPart.Set(V.ODBC.con!rstSeq.FieldValTrim!Part)</string>
        <string>		F.Intrinsic.String.RPad(V.Local.sPart," ",20,V.Local.sPart)</string>
        <string>		F.Intrinsic.String.Right(V.Local.sPart,3,V.Local.sRev)</string>
        <string>		F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)</string>
        <string>		F.Intrinsic.String.Build("Select BackFlush From GCG_4452_Prt_BFlush Where Part = '{0}' and Rev = '{1}' and BackFlush = 1",V.Local.sPart.Trim,V.Local.sRev.Trim,V.Local.sSql)</string>
        <string>		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstPrt",V.Local.sSql)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.Con!rstPrt.EOF,=,False)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sLine.Length,=,0)</string>
        <string>				F.Intrinsic.String.Build("{0},{8},,{1},{2},{3},,{4},{5},{6},{7}",V.Local.sPart,V.ODBC.con!rstSeq.FieldValFloat!Hours_Estimated," "," "," ",V.Args.Job,V.Args.Suffix,V.ODBC.con!rstSeq.FieldValTrim!Seq,V.Local.sRev,V.Local.sLine)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				F.Intrinsic.String.Build("{0}{9}{1},{10},,{2},{3},{4},,{5},{6},{7},{8}",V.Local.sLine,V.Local.sPart,V.ODBC.con!rstSeq.FieldValFloat!Hours_Estimated," "," "," ",V.Args.Job,V.Args.Suffix,V.ODBC.con!rstSeq.FieldValTrim!Seq,V.Ambient.NewLine,V.Local.sRev,V.Local.sLine)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string />
        <string>			F.ODBC.con!rstSeq.Set!Flag_Closed("Y")</string>
        <string>			F.Intrinsic.String.Format(V.Ambient.Date,"YYMMDD",V.Local.sDate)</string>
        <string>			F.ODBC.con!rstSeq.Set!DATE_COMPLETED(V.Local.sDate)</string>
        <string />
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.con!rstPrt.Close</string>
        <string>		F.ODBC.con!rstSeq.Update</string>
        <string />
        <string>		F.ODBC.con!rstSeq.MoveNext</string>
        <string>	F.Intrinsic.Control.Loop</string>
        <string>	F.ODBC.con!rstSeq.Close</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.sLine.Trim,&lt;&gt;,"")</string>
        <string>	F.Intrinsic.String.Build("{0}\L{1}{2}MOPEN.txt",V.Caller.FilesDir,V.Caller.CompanyCode,V.Caller.Terminal,V.Local.sFile)</string>
        <string>	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sLine.Trim)</string>
        <string>	F.Intrinsic.String.Build("L{0}{1}MOPEN.txt",V.Caller.CompanyCode,V.Caller.Terminal,V.Local.sFile)</string>
        <string>	F.Global.General.CallWrapperSync(450100, v.Local.sFile)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("BackFlush_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4452_BackFlush.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.BackFlush.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$$}$RLK$}$3/27/2017 3:39:15 PM$}$False</string>
        <string>Program.Sub.Comments.End</string>
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>397</WindowOriginY>
    <Options>None</Options>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>38</Y>
        </EndPoint>
        <Text>Program.Sub.ScreenSU</Text>
        <DisplayText>Program.Sub.ScreenSU</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>40</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>41</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>43</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>171</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>173</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>213</Y>
        </EndPoint>
        <Text>Program.Sub.Form_UnLoad</Text>
        <DisplayText>Program.Sub.Form_UnLoad</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>215</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>267</Y>
        </EndPoint>
        <Text>Program.Sub.cmdMove_Click</Text>
        <DisplayText>Program.Sub.cmdMove_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>269</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>321</Y>
        </EndPoint>
        <Text>Program.Sub.cmdRemove_Click</Text>
        <DisplayText>Program.Sub.cmdRemove_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>323</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>357</Y>
        </EndPoint>
        <Text>Program.Sub.Populategrids</Text>
        <DisplayText>Program.Sub.Populategrids</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>359</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>397</Y>
        </EndPoint>
        <Text>Program.Sub.SetGridProperties</Text>
        <DisplayText>Program.Sub.SetGridProperties</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>399</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>487</Y>
        </EndPoint>
        <Text>Program.Sub.BackFlush</Text>
        <DisplayText>Program.Sub.BackFlush</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>489</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>491</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>